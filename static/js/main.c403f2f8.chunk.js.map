{"version":3,"sources":["auth/history.js","auth/Message.js","auth/LoginPage.js","App.js","serviceWorker.js","auth/Social.js","auth/Layout.js","auth/MainPage.js","auth/Phone.js","auth/SignUp.js","index.js"],"names":["createBrowserHistory","Message","react_default","a","createElement","className","role","this","props","message","React","Component","emailRegex","RegExp","LoginPage","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleEmailChange","event","setState","email","target","value","validatePassword","state","password","handlePasswordChange","signUp","history","push","validateEmail","test","handleSubmit","e","preventDefault","componentDidMount","localStorage","setItem","arrayLength","JSON","parse","getItem","console","log","setMessage","isRegistere","showError","hits","Array","bind","assertThisInitialized","_this2","fetch","then","Response","json","findresponse","names","length","stringify","emails","social","phones","_this3","clear","onSubmit","noValidate","Message_Message","data-validate","cx","onChange","type","placeholder","href","onClick","App","LoginPage_LoginPage","Boolean","window","location","hostname","match","Social","data","socialData","renderLoading","map","index","item","key","id","Layout","pageCards","outerContainerId","renderTableData","BurgerMenu","MainPage","setData","email_address","keys","_this$state$data","Phone","phoneData","number","first_seen","last_seen","country_code","SignUp","handleChangeName","handleChangeEmail","handleChangePhone","postData","url","body","axios","post","response","catch","error","name","ReactDOM","render","src_App_0","react_router","exact","path","component","react_router_dom","to","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c403f2f8.chunk.js","sourcesContent":["\r\nimport { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory();\r\n","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\n\r\nexport default class Message extends React.Component{ \r\n    \r\n   render(){\r\n        return( <div className=\"alert alert-warning\" role=\"alert\">\r\n        <strong>{this.props.message}</strong> \r\n      </div>);\r\n   }\r\n}","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport cx from 'classnames';\r\nimport history from './history';\r\nimport Message from './Message.js'\r\nconst emailRegex = RegExp(\r\n  /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\r\n);\r\n\r\n\r\n\r\nexport default class LoginPage extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n      showError: '',\r\n      message: '',\r\n      hits: new Array(),\r\n      isRegistere: ''\r\n    };\r\n\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.componentDidMount = this.componentDidMount.bind(this);\r\n    this.signUp= this.signUp.bind(this);\r\n  }\r\n\r\n\r\n  handleEmailChange = event => {\r\n\r\n\r\n    this.setState({ email: event.target.value }, () => {\r\n\r\n    });\r\n  };\r\n\r\n\r\n\r\n\r\n  validatePassword = () => {\r\n    let isValid = false;\r\n    let validPassword = 'BV-API-Challenge';\r\n    let value = this.state.password;\r\n\r\n    if (validPassword == value) {\r\n      isValid = true;\r\n    } else {\r\n      isValid = false;\r\n    }\r\n\r\n    return isValid;\r\n\r\n  }\r\n\r\n  handlePasswordChange = event => {\r\n    this.setState({ password: event.target.value }, () => {\r\n\r\n    });\r\n  }\r\n  \r\n  signUp = event =>{\r\n    history.push('/SignUp');\r\n  }\r\n\r\n\r\n  validateEmail = () => {\r\n    let isValid = false;\r\n    let value = this.state.email;\r\n    let testEmail = emailRegex.test(value);\r\n    if (testEmail) {\r\n\r\n      isValid = true;\r\n    } else {\r\n      isValid = false;\r\n    }\r\n    return isValid;\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    this.setState({ hits: [] });\r\n\r\n    fetch('https://www.beenverified.com/hk/dd/teaser/email?email=' + localStorage.getItem('myEmail')).\r\n      then((Response) => Response.json()).\r\n      then((findresponse) => {\r\n\r\n        console.log(findresponse.names)\r\n        localStorage.setItem('myArray', findresponse.names.length);\r\n        localStorage.setItem('myEmails', JSON.stringify(findresponse.emails));\r\n        localStorage.setItem('SocialData', JSON.stringify(findresponse.social));\r\n        localStorage.setItem('PhoneData', JSON.stringify(findresponse.phones));\r\n        this.setState({ hits: findresponse.names })\r\n      })\r\n\r\n\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n\r\n    if (this.validateEmail() && this.validatePassword()) {\r\n\r\n      this.componentDidMount();\r\n\r\n      localStorage.setItem('myEmail', this.state.email);\r\n\r\n      localStorage.setItem('myPassword', this.state.password);\r\n\r\n\r\n\r\n\r\n      let arrayLength = JSON.parse(localStorage.getItem('myArray'));\r\n      console.log(arrayLength);\r\n      if (arrayLength == 0) {\r\n\r\n\r\n        this.setMessage();\r\n\r\n\r\n      } else {\r\n        this.setState({ isRegistere: true }, () => { });\r\n\r\n        // this.props.history.push('/');\r\n        // this.context.router.push('/');\r\n        history.push(\"/MainPage\");\r\n\r\n      }\r\n\r\n\r\n    } else {\r\n      this.setState({ showError: true }, () => { });\r\n      this.setState({ message: 'The email is invalid or the password is wrong' });\r\n    }\r\n\r\n  }\r\n\r\n  setMessage = () => {\r\n    this.setState({ showError: true }, () => { });\r\n\r\n    this.setState({ message: 'The user is not registere' });\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  render() {\r\n    localStorage.clear();\r\n    return (\r\n      <div className=\"limiter\">\r\n\r\n        <div className=\"container-login100\">\r\n\r\n          <div className=\"wrap-login100\">\r\n\r\n            <form className=\"login100-form validate-form\" onSubmit={this.handleSubmit} noValidate>\r\n\r\n              {(() => {\r\n                if (this.state.showError) {\r\n                  return (\r\n                    <div>\r\n                      <Message message={this.state.message} />\r\n\r\n                    </div>\r\n\r\n                  )\r\n                }\r\n              })()}\r\n\r\n\r\n              <span className=\"login100-form-title p-b-34\" >\r\n                Account Login\r\n              </span>\r\n\r\n\r\n              <div className=\"form-group col-md-12\" data-validate=\"Type user email\">\r\n                <input className={cx('form-control ')} value={this.state.email} onChange={this.handleEmailChange} type=\"text\" placeholder=\"Email \" />\r\n\r\n              </div>\r\n              <div className=\"form-group  col-md-12\" data-validate=\"Type password\">\r\n                <input className=\"form-control\"\r\n                  value={this.state.password} onChange={this.handlePasswordChange} type=\"password\" placeholder=\"Password\" />\r\n              </div>\r\n\r\n              <div className=\"container-login100-form-btn\">\r\n                <button type='submit' className=\"login100-form-btn\" >\r\n                  Sign in\r\n              </button  >\r\n              </div>\r\n\r\n              <div className=\"w-full text-center p-t-27 p-b-239\">\r\n                <span className=\"txt1\">\r\n                  Forgot\r\n              </span>\r\n\r\n                <a href=\"#\" className=\"txt2\">\r\n                  User name / password?\r\n              </a>\r\n              </div>\r\n\r\n              <div className=\"w-full text-center\">\r\n                <button onClick={this.signUp}>\r\n                  <a href=\"\" className=\"txt3\">\r\n                    Sign Up\r\n                 </a>\r\n                </button>\r\n\r\n              </div>\r\n            </form>\r\n\r\n            <div className=\"login100-more\" >\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div >\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\nimport './App.css';\nimport LoginPage from './auth/LoginPage';\nimport './auth/css/LoginPage.css';\nimport './auth/css/util.css';\n\nclass App extends React.Component {\nconstructor(props){\n  super(props) \n}\n \n\n  render() {\n    \n    return (\n      \n     <LoginPage/>\n    );\n }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport Layout from './Layout'\r\nimport { slide as Menu } from \"react-burger-menu\";\r\n\r\n\r\n\r\nexport default class Social extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n\r\n        }\r\n    }\r\n\r\n\r\n    renderTableData() {\r\n        let socialData = JSON.parse(localStorage.getItem('SocialData'));\r\n        if(socialData.length==0 || socialData==null){\r\n           return this.renderLoading();\r\n        }else{\r\n            return socialData.map((data, index) => {\r\n                const { item, type } = data \r\n                return (\r\n                    <tr key={index}>\r\n                        <td>{item}</td>\r\n                        <td>{type}</td>\r\n                        <td></td>\r\n                    </tr>\r\n                )\r\n            })\r\n        }   \r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    renderLoading() {\r\n        return (\r\n            <div>Loading...</div>\r\n\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n\r\n\r\n        return ([\r\n\r\n\r\n\r\n            <div id=\"myPage\">\r\n                <Layout pageCards={\"card\"} outerContainerId={\"myPage\"} />\r\n            </div>\r\n\r\n\r\n\r\n            ,\r\n\r\n\r\n\r\n            <div id=\"card\" className=\"card\">\r\n                <h1 id='title'>Social Data</h1>\r\n                <table id='emails'>\r\n                    <tbody>\r\n\r\n                        {this.renderTableData()\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n\r\n\r\n        ]\r\n        )\r\n    }\r\n\r\n\r\n}","import React from 'react';\r\nimport { slide as Menu } from \"react-burger-menu\";\r\nimport { Router, Route, Link, IndexRoute } from 'react-router-dom';\r\nimport Social from './Social.js'\r\nimport history from './history'\r\nexport default props => {\r\n    return (\r\n        // Pass on our props\r\n        <Menu {...props} >\r\n            <a className=\"menu-item\" href=\"/MainPage\">\r\n                <span> Emails</span>\r\n            </a>\r\n\r\n            <a className=\"menu-item\" href=\"/Social\">\r\n                <span>Social</span>\r\n                           \r\n            </a>\r\n             \r\n            <a className=\"menu-item\" href=\"/Phone\" >\r\n               \r\n                <span>Phones</span>\r\n            </a>\r\n               \r\n\r\n             <a className=\"menu-item\" href=\"/\"  > \r\n                <span>Log out</span>\r\n             </a>  \r\n\r\n        </Menu>\r\n    );\r\n};","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport { slide as Menu } from \"react-burger-menu\";\r\nimport Layout from './Layout'\r\nexport default class MainPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: JSON.parse(localStorage.getItem('myEmails')),\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    setData = () => {\r\n        this.setState({ data: JSON.parse(localStorage.getItem('MyEmails')) });\r\n    }\r\n\r\n    \r\n    renderTableData() {\r\n\r\n\r\n\r\n        let emails = JSON.parse(localStorage.getItem('myEmails'));\r\n        if (  emails.length == 0 ||emails.email_address == null)  {\r\n            return this.renderLoading();\r\n        } else {\r\n            return this.state.data.map((data, index) => {\r\n                const { email_address, type } = data\r\n                return (\r\n                    <tr key={index}>\r\n                        <td>{email_address}</td>\r\n                        <td>{type}</td>\r\n                        <td></td>\r\n                    </tr>\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    renderTableHeader() {\r\n        let header = Object.keys(this.state.data[0])\r\n        const { email_address, type } = this.state.data\r\n\r\n        return (\r\n            <tr>\r\n                <th key={email_address}></th>\r\n\r\n            </tr>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    renderLoading() {\r\n        return (\r\n            <div>Loading...</div>\r\n\r\n        )\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n\r\n        return ([\r\n\r\n\r\n            <div id=\"myPage\">\r\n                <Layout pageCards={\"card\"} outerContainerId={\"myPage\"} />\r\n            </div>\r\n\r\n\r\n\r\n            ,\r\n            <div id=\"card\" className=\"card\">\r\n                <h1 id='title'>Emails</h1>\r\n                <table id='emails'>\r\n                    <tbody>\r\n\r\n                        {this.renderTableData()}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n\r\n\r\n        ]\r\n        )\r\n    }\r\n\r\n\r\n}","import React from 'react';\r\nimport Layout from './Layout'\r\n\r\nexport default class Phone extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n\r\n        }\r\n    }\r\n\r\n\r\n    renderTableData() {\r\n        let phoneData = JSON.parse(localStorage.getItem('PhoneData'));\r\n        if(phoneData.length==0 || phoneData==null){\r\n           return this.renderLoading();\r\n        }else{\r\n            return phoneData.map((data, index) => {\r\n                const { number,type,first_seen ,last_seen,country_code } = data \r\n                return (\r\n                    <tr key={index}>\r\n                        <td>{number}</td>\r\n                        <td>{type}</td>\r\n                        <td>{first_seen}</td>\r\n                        <td>{last_seen}</td>\r\n                        <td>{country_code}</td>\r\n                    </tr>\r\n                )\r\n            })\r\n        }   \r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    renderLoading() {\r\n        return (\r\n            <div>Loading...</div>\r\n\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n\r\n\r\n        return ([\r\n\r\n\r\n\r\n            <div id=\"myPage\">\r\n                <Layout pageCards={\"card\"} outerContainerId={\"myPage\"} />\r\n            </div>\r\n\r\n\r\n\r\n            ,\r\n\r\n\r\n\r\n            <div id=\"card\" className=\"card\">\r\n                <h1 id='title'>Phone Data</h1>\r\n                <table id='emails'>\r\n                    <tbody>\r\n\r\n                        {this.renderTableData()\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n\r\n\r\n        ]\r\n        )\r\n    }\r\n\r\n\r\n}","import React from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport axios from 'axios';\r\n\r\nexport default class SignUp extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            names: '',\r\n            phones: ''\r\n\r\n\r\n        };\r\n\r\n\r\n\r\n        this.handleChangeEmail = this.handleChangeEmail.bind(this);\r\n        this.handleChangePhone = this.handleChangePhone.bind(this);\r\n    }\r\n\r\n\r\n    handleChangeName = event => {\r\n        this.setState({ names: event.target.value });\r\n    };\r\n\r\n    handleChangeEmail = event => {\r\n        this.setState({ email: event.target.value });\r\n    }\r\n\r\n    handleChangePhone = event => {\r\n        this.setState({ phones: event.target.value });\r\n    }\r\n\r\n   \r\n    postData = event=> {\r\n        let url = 'https://www.beenverified.com/hk/dd/teaser/email?email=' + this.state.email;\r\n        \r\n        let body ={\r\n            \"emails\":this.state.email,\r\n            \"names\": this.state.names,\r\n            \"phones\": this.state.phones\r\n        }\r\n        axios.post(url, body)\r\n          .then(function(response){\r\n            console.log(response);\r\n            //Perform action based on response\r\n        })\r\n          .catch(function(error){\r\n            console.log(error);\r\n            //Perform action based on error\r\n          });\r\n       }\r\n  \r\n\r\n    render() {\r\n        return (\r\n\r\n\r\n            <div className=\"page-wrapper bg-blue p-t-100 p-b-100 font-robo\">\r\n                <div className=\"wrapper wrapper--w680\">\r\n                    <div className=\"card card-1\">\r\n                        <div className=\"card-heading\"></div>\r\n                        <div className=\"card-body\">\r\n                            <h2 className=\"title\">Registration Info</h2>\r\n                            <form onSubmit={this.postData} noValidate>\r\n                                <div className=\"input-group\">\r\n                                    <input className=\"input--style-1\" type=\"text\" onChange={this.handleChangeName} value={this.state.names} placeholder=\"NAME\" name=\"name\" />\r\n                                </div>\r\n                                <div className=\"input-group\">\r\n\r\n                                    <input className=\"input--style-1\" type=\"number\" onChange={this.handleChangePhone} value={this.state.phones} placeholder=\"Phone\" />\r\n\r\n\r\n\r\n                                </div>\r\n\r\n                                <div className=\"input-group\">\r\n                                    <input className=\"input--style-1\" type=\"email\" onChange={this.handleChangeEmail} value={this.state.email} placeholder=\"Email\" name=\"res_code\" />\r\n                                </div>\r\n\r\n                                <div className=\"p-t-20\">\r\n                                    <button className=\"btn btn--radius btn--green\" type=\"submit\">Submit</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Router, Route, Link , IndexRoute} from 'react-router-dom';\nimport history from './auth/history';\nimport MainPage from './auth/MainPage'\nimport  LoginPage from './auth/LoginPage';\nimport Social from './auth/Social';\nimport Phone from './auth/Phone';\nimport SignUp from './auth/SignUp';\n\nReactDOM.render([\n       \n      <App/>,  \n      <Router history={history}>\n          \n\n\n          <Route exact path=\"/\" component={LoginPage}/>\n\n         <Link to =\"/MainPage\"></Link>\n        <Route path=\"/MainPage\" component={MainPage}/>\n        <Route path=\"/Social\" component={Social}/>\n        <Route path=\"/Phone\"  component={Phone}/>\n        <Route path=\"/SignUp\"  component={SignUp}/>\n            \n      </Router>\n          \n    ,document.getElementById('root')\n]);\n\n///ReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}